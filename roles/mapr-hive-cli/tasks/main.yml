---
# Install Hive CLI
# Redhat / CentOS
- name: Install mapr-hive (Redhat / CentOS)
  yum: name=mapr-hive state=present
  when: ansible_os_family == 'RedHat'
# Debian / Ubuntu
- name: Install mapr-hive (Debian / Ubuntu)
  apt: name=mapr-hive state=present allow_unauthenticated=yes
  when: ansible_os_family == 'Debian'
# Suse
- name: Install mapr-hive (Suse)
  zypper: name=mapr-hive state=present
  when: ansible_os_family == 'Suse'

# Other actions
- name: Get MySQL Host
  set_fact: mysql_item={{ hostvars[item]['ansible_fqdn'] }}
  with_items:
    - "{{ groups['ext-mysql'] }}"
  register: mysql_hosts
- name: Make MySQL Host String
  set_fact: hive_db_host={{ mysql_hosts.results | map(attribute='ansible_facts.mysql_item') | list | join(',')}}
- name: Create hive mysql db
  mysql_db: name={{ hive_db_schema }} state=present login_host={{ hive_db_host }} login_user={{ mapr_mysql_user }} login_password={{ mapr_mysql_password }}
- name: Downloading MySQL Driver
  unarchive: src={{ mysql_jdbc_url }} dest=/tmp copy=no
- name: Copy mysql driver
  copy: remote_src=True src=/tmp/mysql-connector-java-{{ mysql_jdbc_version }}/mysql-connector-java-{{ mysql_jdbc_version }}-bin.jar dest=/opt/mapr/hive/hive-{{ hive_version }}/lib/
- name: Get Thrift server
  set_fact: metastore_item=thrift://{{ hostvars[item]['ansible_fqdn'] }}:9093
  with_items:
    - "{{ groups['mapr-hive-metastore'] }}"
  register: metastore_hosts
- name: Make Resource Manager String
  set_fact: metastore_string={{ metastore_hosts.results | map(attribute='ansible_facts.metastore_item') | list | join(',')}}
- name: Configure hive-site.xml
  template: src=hive-site.unsecure.xml dest=/opt/mapr/hive/hive-{{ hive_version }}/conf/hive-site.xml
- name: Configure hive-env.sh
  template: src=hive-env.unsecure.sh dest=/opt/mapr/hive/hive-{{ hive_version }}/conf/hive-env.sh
- name: Add HIVE_HOME to /etc/profile
  lineinfile: dest=/etc/profile state=present line="export HIVE_HOME=/opt/mapr/hive/hive-{{ hive_version }}/"
- name: Set owner mapr-system user
  file: path=/opt/mapr/hive owner={{ mapr_user }} group={{ mapr_group }} state=directory recurse=yes